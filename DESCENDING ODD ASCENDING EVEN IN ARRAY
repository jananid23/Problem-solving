Given an array A of positive integers. Your task is to sort them in such a way that the first part of the array contains odd numbers sorted in descending order, rest portion contains even numbers sorted in ascending order.
Example 1:
Input:
N = 7
Arr = {1, 2, 3, 5, 4, 7, 10}
Output:
7 5 3 1 2 4 10
Explanation:
Array elements 7 5 3 1 are odd
and sorted in descending order,
whereas 2 4 10 are even numbers
and sorted in ascending order.
Example 2:
Input:
N = 7
Arr = {0, 4, 5, 3, 7, 2, 1}
Output:
7 5 3 1 0 2 4

SOLUTION:

#include<stdio.h>
void sortarray(int arr[],int n){
	int i,j,temp;
	int oddcount=0;
	for(i=0;i<n;i++){
		if(arr[i]%2!=0){
			temp=arr[oddcount];
			arr[oddcount]=arr[i];
			arr[i]=temp;
			oddcount++;
		}
	}
	
	for(i=0;i<oddcount-1;i++){
		for(j=i+1;j<oddcount;j++){
			if(arr[i]<arr[j]){
				temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
			}
		}
	}
	
	for(i=oddcount;i<n-1;i++){
		for(j=i+1;j<n;j++){
			if(arr[i]>arr[j]){
				temp=arr[i];
				arr[i]=arr[j];
				arr[j]=temp;
			}
		}
	}
}

int main(){
	int arr[]={1,2,3,5,4,7,10};
	int n=sizeof(arr)/ sizeof(arr[0]);
	sortarray(arr,n);
	int i;
	for(i=0;i<n;i++){
		printf("%d",arr[i]);
		
	}
	return 0;
}
