Given an array arr of size nâˆ’1 that contains distinct integers in the range of 1 to n (inclusive), find the missing element. The array is a permutation of size n with one element missing. Return the missing element.
Examples:
Input: n = 5, arr[] = [1,2,3,5]
Output: 4
Explanation : All the numbers from 1 to 5 are present except 4.
Input: n = 2, arr[] = [1]
Output: 2
Explanation : All the numbers from 1 to 2 are present except 2.

SOLUTION:

#include <stdio.h>

int findMissingElement(int n, int arr[], int size) {
    int sum_expected = n * (n + 1) / 2;
    int sum_actual = 0;
    for (int i = 0; i < size; i++) {
        sum_actual += arr[i];
    }
    return sum_expected - sum_actual;
}

int main() {
    int n = 2;
    int arr[] = {1};
    int size = sizeof(arr) / sizeof(arr[0]);
    int missingElement = findMissingElement(n, arr, size);
    printf("The missing element is: %d\n", missingElement);
    
    return 0;
}
ANOTHER METHOD:

#include<stdio.h>
int missing(int arr[],int n){
    for(int i=0;i<n;i++){
        if(arr[i]+1 == arr[i+1]){
            continue;
        }
        else{
            return arr[i]+1;
        }
    }
    
}
int main(){
    int n;
    scanf("%d",&n);
    int arr[n];
    for(int i=0;i<n;i++){
        scanf("%d",&arr[i]);
    }
    int res=missing(arr,n);
    printf("%d",res);
    return 0;
}
